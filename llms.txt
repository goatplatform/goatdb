# GoatDB

> GoatDB is an edge‑native, distributed, schema‑based database designed for collaborative applications. It stores data in an append‑only, cryptographically signed commit graph, syncs in soft real‑time, works fully offline, and ships as a single executable.

GoatDB lets every client act as a replica and run low‑latency local queries while the database transparently merges and syncs changes in the background. The system provides versioned schemas, fine‑grained authorization rules, and React hooks for real‑time UIs.

## Getting Started

- [Installation](https://goatdb.dev/installation): Install GoatDB in Deno (stable) or Node.js (experimental)
- [Tutorial](https://goatdb.dev/tutorial): Build a Todo list app step‑by‑step
- [Concepts](https://goatdb.dev/concepts): Core architecture, Data Registry, items, and repositories

## Core Features

- [Schema](https://goatdb.dev/schema): Define, version, and migrate schemas
- [Reading and Writing Data](https://goatdb.dev/reading-and-writing-data): Basic data operations
- [Query](https://goatdb.dev/query): Real‑time, incremental query mechanism
- [Authorization Rules](https://goatdb.dev/authorization-rules): Fine‑grained authorization rules
- [Sessions](https://goatdb.dev/sessions): Session‑based authentication model
- [React Integration](https://goatdb.dev/react): Integrate GoatDB with React apps

## Advanced Topics

- [Commit Graph](https://goatdb.dev/commit-graph): Core data structure and versioning
- [Conflict Resolution](https://goatdb.dev/conflict-resolution): How GoatDB handles concurrent changes
- [Synchronization](https://goatdb.dev/sync): How data syncs between nodes
- [Benchmarks](https://goatdb.dev/benchmarks): Performance metrics and comparisons

## Additional Resources

- [FAQ](https://goatdb.dev/faq): Frequently asked questions
- [GoatDB GitHub Repository](https://github.com/goatplatform/goatdb): Source code, issues, and roadmap

